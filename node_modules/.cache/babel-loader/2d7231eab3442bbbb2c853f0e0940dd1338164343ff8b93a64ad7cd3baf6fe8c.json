{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ITShow-project\\\\src\\\\js\\\\virtual\\\\Part2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../../css/virtual/part2.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Part2({\n  showTable,\n  toggleView\n}) {\n  _s();\n  // useState를 사용하여 showTable의 상태를 관리합니다.\n  const [isTableShown, setIsTableShown] = useState(showTable);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"part\",\n    id: \"part2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsTableShown(true),\n        children: \"\\uD45C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsTableShown(false),\n        children: \"\\uB274\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isTableShown ? 'table' : 'news'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_s(Part2, \"U4UIpTrLRC1I+keFAibfg90aByE=\");\n_c = Part2;\nexport default Part2;\nvar _c;\n$RefreshReg$(_c, \"Part2\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Part2","showTable","toggleView","_s","isTableShown","setIsTableShown","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ITShow-project/src/js/virtual/Part2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/virtual/part2.css';\r\n\r\nfunction Part2({ showTable, toggleView }) {\r\n    // useState를 사용하여 showTable의 상태를 관리합니다.\r\n    const [isTableShown, setIsTableShown] = useState(showTable);\r\n\r\n    return (\r\n        <section className=\"part\" id=\"part2\">\r\n            <div className=\"graph\"></div>\r\n            <div className=\"button-line\">\r\n                {/* 버튼 클릭 시 해당하는 뷰를 토글합니다. */}\r\n                <button onClick={() => setIsTableShown(true)}>표</button>\r\n                <button onClick={() => setIsTableShown(false)}>뉴스</button>\r\n            </div>\r\n            {/* isTableShown 상태에 따라 표 또는 뉴스를 보여줍니다. */}\r\n            <div className={isTableShown ? 'table' : 'news'}></div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Part2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,KAAKA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAACI,SAAS,CAAC;EAE3D,oBACIF,OAAA;IAASO,SAAS,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAAAC,QAAA,gBAChCT,OAAA;MAAKO,SAAS,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7Bb,OAAA;MAAKO,SAAS,EAAC,aAAa;MAAAE,QAAA,gBAExBT,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,IAAI,CAAE;QAAAG,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDb,OAAA;QAAQc,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,KAAK,CAAE;QAAAG,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eAENb,OAAA;MAAKO,SAAS,EAAEF,YAAY,GAAG,OAAO,GAAG;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAElB;AAACT,EAAA,CAhBQH,KAAK;AAAAc,EAAA,GAALd,KAAK;AAkBd,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}