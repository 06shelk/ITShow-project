{"ast":null,"code":"import problems from '../js/study-game-problems';\nimport '../components/study-game';\n\n// 타이머 설정 (초 단위)\nconst totalTime = 30;\nlet timeElapsed = 0;\nlet timer;\n\n// 게임 진행에 필요한 변수들\nlet questionArray = [];\nlet answerArray = [];\nlet round = 1;\nlet score = 0;\n\n// 타이머 바 업데이트 함수\nfunction updateProgressBar() {\n  const progress = timeElapsed / totalTime * 100;\n  document.getElementById('timer').style.height = progress + '%';\n}\n\n// 게임 진행 함수\nfunction gameAnswerAppear() {\n  // 타이머가 종료되면 게임 종료\n  if (timeElapsed >= totalTime) {\n    clearInterval(timer);\n    return;\n  }\n\n  // 몇번째 문제인지\n  document.querySelector(\".question_number\").innerHTML = \"Q\" + round + \".\";\n  round++;\n\n  // 한 문제씩 나오도록 수정\n  let rand1;\n  do {\n    rand1 = Math.floor(Math.random() * problems.length);\n  } while (questionArray.includes(rand1));\n  questionArray.push(rand1);\n\n  // 문제 내용을 표시하는 엘리먼트 변경\n  document.querySelector(\".question\").innerHTML = problems[rand1].problem;\n  //console.log(\"문제 내용:\", problems[rand1].problem);\n\n  // 문제에 대한 답을 랜덤한 버튼에 배치\n  var randomAnswerIndex = Math.floor(Math.random() * 4) + 1;\n  var randomAnswerElement = document.querySelector('.answer.answer' + randomAnswerIndex);\n  randomAnswerElement.innerText = problems[rand1].answer;\n  console.log(\"답:\", problems[rand1].answer);\n\n  // 다른 버튼들에 문제를 배치\n  answerArray.push(randomAnswerIndex);\n  let usedProblems = [rand1];\n  for (let i = 1; i <= 4; i++) {\n    if (i !== randomAnswerIndex) {\n      let randomNotAnswerIndex;\n      do {\n        randomNotAnswerIndex = Math.floor(Math.random() * problems.length);\n      } while (usedProblems.includes(randomNotAnswerIndex));\n      usedProblems.push(randomNotAnswerIndex);\n      document.querySelector('.answer.answer' + i).innerText = problems[randomNotAnswerIndex].answer;\n    }\n  }\n  console.log(answerArray);\n} //updateProgressBar()\n\n// 게임 시작 함수\nfunction gameStart() {\n  // 타이머 시작\n  timer = setInterval(function () {\n    if (timeElapsed >= totalTime) {\n      clearInterval(timer);\n      alert(`타이머가 종료되었습니다. 점수는 ${score}입니다.`);\n    } else {\n      timeElapsed++;\n      updateProgressBar();\n    }\n  }, 1000);\n\n  // 게임 시작 시 첫 문제 표시\n  gameAnswerAppear();\n\n  // 버튼 이벤트 및 정답 처리\n  document.querySelectorAll('.answer').forEach(button => {\n    button.addEventListener('click', function (event) {\n      const clickedButtonIndex = parseInt(button.classList[1].slice(-1));\n      // 정답 확인 부분\n      if (clickedButtonIndex === answerArray[answerArray.length - 1]) {\n        console.log(\"정답입니다!\");\n        score += 10;\n        console.log(score);\n        // 문제 생성\n        gameAnswerAppear();\n      } else {\n        console.log(\"틀렸습니다!\");\n        // 문제 생성\n        gameAnswerAppear();\n      }\n    });\n  });\n} //gameStart()\n\n// 게임 시작\ngameStart();","map":{"version":3,"names":["problems","totalTime","timeElapsed","timer","questionArray","answerArray","round","score","updateProgressBar","progress","document","getElementById","style","height","gameAnswerAppear","clearInterval","querySelector","innerHTML","rand1","Math","floor","random","length","includes","push","problem","randomAnswerIndex","randomAnswerElement","innerText","answer","console","log","usedProblems","i","randomNotAnswerIndex","gameStart","setInterval","alert","querySelectorAll","forEach","button","addEventListener","event","clickedButtonIndex","parseInt","classList","slice"],"sources":["C:/ITShow-project/src/logic/study-game-logic.js"],"sourcesContent":["import problems from '../js/study-game-problems';\r\nimport'../components/study-game';\r\n\r\n\r\n// 타이머 설정 (초 단위)\r\nconst totalTime = 30;\r\nlet timeElapsed = 0;\r\nlet timer;\r\n\r\n// 게임 진행에 필요한 변수들\r\nlet questionArray = [];\r\nlet answerArray = [];\r\nlet round = 1;\r\nlet score = 0;\r\n\r\n// 타이머 바 업데이트 함수\r\nfunction updateProgressBar() {\r\n  const progress = (timeElapsed / totalTime) * 100;\r\n  document.getElementById('timer').style.height = progress + '%';\r\n}\r\n\r\n// 게임 진행 함수\r\nfunction gameAnswerAppear() {\r\n  // 타이머가 종료되면 게임 종료\r\n  if (timeElapsed >= totalTime) {\r\n    clearInterval(timer);\r\n    return;\r\n  }\r\n\r\n  // 몇번째 문제인지\r\n  document.querySelector(\".question_number\").innerHTML = \"Q\" + round + \".\";\r\n  round++;\r\n\r\n  // 한 문제씩 나오도록 수정\r\n  let rand1;\r\n  do {\r\n    rand1 = Math.floor(Math.random() * problems.length);\r\n  } while (questionArray.includes(rand1));\r\n\r\n  questionArray.push(rand1);\r\n\r\n  // 문제 내용을 표시하는 엘리먼트 변경\r\n  document.querySelector(\".question\").innerHTML = problems[rand1].problem;\r\n  //console.log(\"문제 내용:\", problems[rand1].problem);\r\n\r\n  // 문제에 대한 답을 랜덤한 버튼에 배치\r\n  var randomAnswerIndex = Math.floor(Math.random() * 4) + 1;\r\n  var randomAnswerElement = document.querySelector('.answer.answer' + randomAnswerIndex);\r\n  randomAnswerElement.innerText = problems[rand1].answer;\r\n  console.log(\"답:\", problems[rand1].answer);\r\n\r\n  // 다른 버튼들에 문제를 배치\r\n  answerArray.push(randomAnswerIndex);\r\n  let usedProblems = [rand1];\r\n  for (let i = 1; i <= 4; i++) {\r\n    if (i !== randomAnswerIndex) {\r\n      let randomNotAnswerIndex;\r\n      do {\r\n        randomNotAnswerIndex = Math.floor(Math.random() * problems.length);\r\n      } while (usedProblems.includes(randomNotAnswerIndex));\r\n      usedProblems.push(randomNotAnswerIndex);\r\n      document.querySelector('.answer.answer' + i).innerText = problems[randomNotAnswerIndex].answer;\r\n    }\r\n  }\r\n  console.log(answerArray);\r\n\r\n  \r\n} //updateProgressBar()\r\n\r\n// 게임 시작 함수\r\nfunction gameStart() {\r\n  // 타이머 시작\r\n  timer = setInterval(function() {\r\n    if (timeElapsed >= totalTime) {\r\n      clearInterval(timer);\r\n      alert(`타이머가 종료되었습니다. 점수는 ${score}입니다.`);\r\n    } else {\r\n      timeElapsed++;\r\n      updateProgressBar();\r\n    }\r\n  }, 1000);\r\n\r\n  // 게임 시작 시 첫 문제 표시\r\n  gameAnswerAppear();\r\n\r\n  // 버튼 이벤트 및 정답 처리\r\n  document.querySelectorAll('.answer').forEach(button => {\r\n    button.addEventListener('click', function(event) {\r\n        const clickedButtonIndex = parseInt(button.classList[1].slice(-1));\r\n        // 정답 확인 부분\r\n        if (clickedButtonIndex === answerArray[answerArray.length - 1]) {\r\n            console.log(\"정답입니다!\");\r\n            score += 10;\r\n            console.log(score);\r\n            // 문제 생성\r\n            gameAnswerAppear();\r\n        } else {\r\n            console.log(\"틀렸습니다!\");\r\n            // 문제 생성\r\n            gameAnswerAppear();\r\n        }\r\n    });\r\n  });\r\n} //gameStart()\r\n\r\n// 게임 시작\r\ngameStart();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}